{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chitt\\\\Desktop\\\\fullstack-code-challenge\\\\fullstack-code-challenge\\\\dashboard\\\\src\\\\components\\\\SubmitScanResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitScanResults = () => {\n  _s();\n  const [repositoryName, setRepositoryName] = useState('');\n  const [status, setStatus] = useState('Queued');\n  const [findings, setFindings] = useState('');\n  const [queuedAt, setQueuedAt] = useState(null);\n  const [scanningAt, setScanningAt] = useState(null);\n  const [finishedAt, setFinishedAt] = useState(null);\n  const handleSubmit = async () => {\n    try {\n      await axios.post('/api/results', {\n        repositoryName,\n        status,\n        findings: JSON.parse(findings),\n        queuedAt,\n        scanningAt,\n        finishedAt\n      });\n      alert('Scan result submitted successfully');\n    } catch (error) {\n      alert('Error submitting scan result');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Repository Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: repositoryName,\n        onChange: e => setRepositoryName(e.target.value),\n        placeholder: \"Repository Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        placeholder: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Findings (JSON)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: findings,\n        onChange: e => setFindings(e.target.value),\n        placeholder: \"Findings JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Queued At\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"datetime-local\",\n        onChange: e => setQueuedAt(new Date(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Scanning At\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"datetime-local\",\n        onChange: e => setScanningAt(new Date(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Finished At\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"datetime-local\",\n        onChange: e => setFinishedAt(new Date(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(SubmitScanResults, \"s2biZUIaQk6dLCTslssvsxZlBGA=\");\n_c = SubmitScanResults;\nexport default SubmitScanResults;\nvar _c;\n$RefreshReg$(_c, \"SubmitScanResults\");","map":{"version":3,"names":["React","useState","Button","Form","Input","axios","SubmitScanResults","repositoryName","setRepositoryName","status","setStatus","findings","setFindings","queuedAt","setQueuedAt","scanningAt","setScanningAt","finishedAt","setFinishedAt","handleSubmit","post","JSON","parse","alert","error","e","target","value","Date"],"sources":["C:/Users/chitt/Desktop/fullstack-code-challenge/fullstack-code-challenge/dashboard/src/components/SubmitScanResults.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form, Input } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nconst SubmitScanResults: React.FC = () => {\r\n    const [repositoryName, setRepositoryName] = useState('');\r\n    const [status, setStatus] = useState<'Queued' | 'In Progress' | 'Success' | 'Failure'>('Queued');\r\n    const [findings, setFindings] = useState<string>('');\r\n    const [queuedAt, setQueuedAt] = useState<Date | null>(null);\r\n    const [scanningAt, setScanningAt] = useState<Date | null>(null);\r\n    const [finishedAt, setFinishedAt] = useState<Date | null>(null);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            await axios.post('/api/results', {\r\n                repositoryName,\r\n                status,\r\n                findings: JSON.parse(findings),\r\n                queuedAt,\r\n                scanningAt,\r\n                finishedAt\r\n            });\r\n            alert('Scan result submitted successfully');\r\n        } catch (error) {\r\n            alert('Error submitting scan result');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Field>\r\n                <label>Repository Name</label>\r\n                <Input\r\n                    value={repositoryName}\r\n                    onChange={(e) => setRepositoryName(e.target.value)}\r\n                    placeholder=\"Repository Name\"\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Status</label>\r\n                <Input\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value as 'Queued' | 'In Progress' | 'Success' | 'Failure')}\r\n                    placeholder=\"Status\"\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Findings (JSON)</label>\r\n                <Input\r\n                    value={findings}\r\n                    onChange={(e) => setFindings(e.target.value)}\r\n                    placeholder=\"Findings JSON\"\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Queued At</label>\r\n                <Input\r\n                    type=\"datetime-local\"\r\n                    onChange={(e) => setQueuedAt(new Date(e.target.value))}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Scanning At</label>\r\n                <Input\r\n                    type=\"datetime-local\"\r\n                    onChange={(e) => setScanningAt(new Date(e.target.value))}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Finished At</label>\r\n                <Input\r\n                    type=\"datetime-local\"\r\n                    onChange={(e) => setFinishedAt(new Date(e.target.value))}\r\n                />\r\n            </Form.Field>\r\n            <Button type=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SubmitScanResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}