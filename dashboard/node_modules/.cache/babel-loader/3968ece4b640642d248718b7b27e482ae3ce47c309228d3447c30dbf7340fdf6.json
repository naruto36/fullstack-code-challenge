{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chitt\\\\Desktop\\\\Code\\\\fullstack-code-challenge\\\\dashboard\\\\src\\\\components\\\\ListScanResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, Label } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListScanResults = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const response = await axios.get('/api/results');\n        setResults(response.data);\n      } catch (error) {\n        console.error('Error fetching results:', error);\n      }\n    };\n    fetchResults();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    celled: true,\n    children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n      children: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Repository Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Findings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      children: results.map(result => {\n        var _result$queuedAt, _result$scanningAt, _result$finishedAt;\n        return /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: result.repositoryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: result.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              children: result.findings.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: result.status === 'Queued' ? (_result$queuedAt = result.queuedAt) === null || _result$queuedAt === void 0 ? void 0 : _result$queuedAt.toISOString() : result.status === 'In Progress' ? (_result$scanningAt = result.scanningAt) === null || _result$scanningAt === void 0 ? void 0 : _result$scanningAt.toISOString() : (_result$finishedAt = result.finishedAt) === null || _result$finishedAt === void 0 ? void 0 : _result$finishedAt.toISOString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ListScanResults, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c = ListScanResults;\nexport default ListScanResults;\nvar _c;\n$RefreshReg$(_c, \"ListScanResults\");","map":{"version":3,"names":["React","useEffect","useState","Table","Label","axios","ListScanResults","results","setResults","fetchResults","response","get","data","error","console","map","result","repositoryName","status","findings","length","queuedAt","toISOString","scanningAt","finishedAt","id"],"sources":["C:/Users/chitt/Desktop/Code/fullstack-code-challenge/dashboard/src/components/ListScanResults.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table, Label } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\ninterface ScanResult {\r\n    id: number;\r\n    repositoryName: string;\r\n    status: 'Queued' | 'In Progress' | 'Success' | 'Failure';\r\n    findings: any;\r\n    queuedAt: Date | null;\r\n    scanningAt: Date | null;\r\n    finishedAt: Date | null;\r\n}\r\n\r\nconst ListScanResults: React.FC = () => {\r\n    const [results, setResults] = useState<ScanResult[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchResults = async () => {\r\n            try {\r\n                const response = await axios.get('/api/results');\r\n                setResults(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching results:', error);\r\n            }\r\n        };\r\n\r\n        fetchResults();\r\n    }, []);\r\n\r\n    return (\r\n        <Table celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Repository Name</Table.HeaderCell>\r\n                    <Table.HeaderCell>Status</Table.HeaderCell>\r\n                    <Table.HeaderCell>Findings</Table.HeaderCell>\r\n                    <Table.HeaderCell>Timestamp</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {results.map((result) => (\r\n                    <Table.Row key={result.id}>\r\n                        <Table.Cell>{result.repositoryName}</Table.Cell>\r\n                        <Table.Cell>{result.status}</Table.Cell>\r\n                        <Table.Cell>\r\n                            <Label color=\"blue\">{result.findings.length}</Label>\r\n                        </Table.Cell>\r\n                        <Table.Cell>{result.status === 'Queued' ? result.queuedAt?.toISOString() : result.status === 'In Progress' ? result.scanningAt?.toISOString() : result.finishedAt?.toISOString()}</Table.Cell>\r\n                    </Table.Row>\r\n                ))}\r\n            </Table.Body>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default ListScanResults;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,KAAK,QAAQ,mBAAmB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAY1B,MAAMC,eAAyB,GAAG,MAAM;EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAe,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAG,YAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,cAAc,CAAC;QAChDH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDJ,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,KAAK;IAAC,MAAM;IAAA,wBACT,QAAC,KAAK,CAAC,MAAM;MAAA,uBACT,QAAC,KAAK,CAAC,GAAG;QAAA,wBACN,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAe;UAAA;UAAA;UAAA;QAAA,QAAmB,eACpD,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC3C,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC7C,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAmB;MAAA;QAAA;QAAA;QAAA;MAAA;IACtC;MAAA;MAAA;MAAA;IAAA,QACD,eAEf,QAAC,KAAK,CAAC,IAAI;MAAA,UACNF,OAAO,CAACQ,GAAG,CAAEC,MAAM;QAAA;QAAA,oBAChB,QAAC,KAAK,CAAC,GAAG;UAAA,wBACN,QAAC,KAAK,CAAC,IAAI;YAAA,UAAEA,MAAM,CAACC;UAAc;YAAA;YAAA;YAAA;UAAA,QAAc,eAChD,QAAC,KAAK,CAAC,IAAI;YAAA,UAAED,MAAM,CAACE;UAAM;YAAA;YAAA;YAAA;UAAA,QAAc,eACxC,QAAC,KAAK,CAAC,IAAI;YAAA,uBACP,QAAC,KAAK;cAAC,KAAK,EAAC,MAAM;cAAA,UAAEF,MAAM,CAACG,QAAQ,CAACC;YAAM;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QAC3C,eACb,QAAC,KAAK,CAAC,IAAI;YAAA,UAAEJ,MAAM,CAACE,MAAM,KAAK,QAAQ,uBAAGF,MAAM,CAACK,QAAQ,qDAAf,iBAAiBC,WAAW,EAAE,GAAGN,MAAM,CAACE,MAAM,KAAK,aAAa,yBAAGF,MAAM,CAACO,UAAU,uDAAjB,mBAAmBD,WAAW,EAAE,yBAAGN,MAAM,CAACQ,UAAU,uDAAjB,mBAAmBF,WAAW;UAAE;YAAA;YAAA;YAAA;UAAA,QAAc;QAAA,GANlLN,MAAM,CAACS,EAAE;UAAA;UAAA;UAAA;QAAA,QAOb;MAAA,CACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEhB,CAAC;AAAC,GAzCInB,eAAyB;AAAA,KAAzBA,eAAyB;AA2C/B,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}