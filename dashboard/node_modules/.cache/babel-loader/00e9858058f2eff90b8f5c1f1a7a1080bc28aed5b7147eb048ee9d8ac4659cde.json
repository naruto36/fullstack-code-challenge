{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chitt\\\\Desktop\\\\mono repo\\\\dashboard\\\\src\\\\components\\\\FindListScanResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindListScanResults = _ref => {\n  _s();\n  let {\n    resultId\n  } = _ref;\n  const [findings, setFindings] = useState([]);\n  useEffect(() => {\n    const fetchFindings = async () => {\n      try {\n        const response = await axios.get(`/api/results/${resultId}`);\n        setFindings(response.data.findings);\n      } catch (error) {\n        console.error('Error fetching findings:', error);\n      }\n    };\n    fetchFindings();\n  }, [resultId]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    celled: true,\n    children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n      children: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Rule ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Severity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Path: Line Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      children: findings.map((finding, index) => /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: finding.ruleId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: finding.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: finding.severity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: [finding.location.path, \": \", finding.location.positions.begin.line]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(FindListScanResults, \"x3OH+I4WCuubU4xflxehS75McIs=\");\n_c = FindListScanResults;\nexport default FindListScanResults;\nvar _c;\n$RefreshReg$(_c, \"FindListScanResults\");","map":{"version":3,"names":["React","useEffect","useState","Table","axios","FindListScanResults","resultId","findings","setFindings","fetchFindings","response","get","data","error","console","map","finding","index","ruleId","description","severity","location","path","positions","begin","line"],"sources":["C:/Users/chitt/Desktop/mono repo/dashboard/src/components/FindListScanResults.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\ninterface Finding {\r\n    ruleId: string;\r\n    description: string;\r\n    severity: string;\r\n    location: {\r\n        path: string;\r\n        positions: {\r\n            begin: {\r\n                line: number;\r\n            };\r\n        };\r\n    };\r\n}\r\n\r\ninterface FindingsListProps {\r\n    resultId: number;\r\n}\r\n\r\nconst FindListScanResults: React.FC<FindingsListProps> = ({ resultId }) => {\r\n    const [findings, setFindings] = useState<Finding[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchFindings = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/results/${resultId}`);\r\n                setFindings(response.data.findings);\r\n            } catch (error) {\r\n                console.error('Error fetching findings:', error);\r\n            }\r\n        };\r\n\r\n        fetchFindings();\r\n    }, [resultId]);\r\n\r\n    return (\r\n        <Table celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Rule ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Description</Table.HeaderCell>\r\n                    <Table.HeaderCell>Severity</Table.HeaderCell>\r\n                    <Table.HeaderCell>Path: Line Number</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {findings.map((finding, index) => (\r\n                    <Table.Row key={index}>\r\n                        <Table.Cell>{finding.ruleId}</Table.Cell>\r\n                        <Table.Cell>{finding.description}</Table.Cell>\r\n                        <Table.Cell>{finding.severity}</Table.Cell>\r\n                        <Table.Cell>{finding.location.path}: {finding.location.positions.begin.line}</Table.Cell>\r\n                    </Table.Row>\r\n                ))}\r\n            </Table.Body>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default FindListScanResults;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,mBAAmB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAoB1B,MAAMC,mBAAgD,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAClE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAY,EAAE,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMQ,aAAa,GAAG,YAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,gBAAeL,QAAS,EAAC,CAAC;QAC5DE,WAAW,CAACE,QAAQ,CAACE,IAAI,CAACL,QAAQ,CAAC;MACvC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDJ,aAAa,EAAE;EACnB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACI,QAAC,KAAK;IAAC,MAAM;IAAA,wBACT,QAAC,KAAK,CAAC,MAAM;MAAA,uBACT,QAAC,KAAK,CAAC,GAAG;QAAA,wBACN,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC5C,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAmB,eAChD,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC7C,QAAC,KAAK,CAAC,UAAU;UAAA,UAAC;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAmB;MAAA;QAAA;QAAA;QAAA;MAAA;IAC9C;MAAA;MAAA;MAAA;IAAA,QACD,eAEf,QAAC,KAAK,CAAC,IAAI;MAAA,UACNC,QAAQ,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzB,QAAC,KAAK,CAAC,GAAG;QAAA,wBACN,QAAC,KAAK,CAAC,IAAI;UAAA,UAAED,OAAO,CAACE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAc,eACzC,QAAC,KAAK,CAAC,IAAI;UAAA,UAAEF,OAAO,CAACG;QAAW;UAAA;UAAA;UAAA;QAAA,QAAc,eAC9C,QAAC,KAAK,CAAC,IAAI;UAAA,UAAEH,OAAO,CAACI;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAc,eAC3C,QAAC,KAAK,CAAC,IAAI;UAAA,WAAEJ,OAAO,CAACK,QAAQ,CAACC,IAAI,EAAC,IAAE,EAACN,OAAO,CAACK,QAAQ,CAACE,SAAS,CAACC,KAAK,CAACC,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA,GAJ7ER,KAAK;QAAA;QAAA;QAAA;MAAA,QAMxB;IAAC;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEhB,CAAC;AAAC,GAvCIZ,mBAAgD;AAAA,KAAhDA,mBAAgD;AAyCtD,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}